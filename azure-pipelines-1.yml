trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '28a53a90-d3e4-4caa-9c01-bbfe84bd39b4'
  imageRepository: 'abdullahtanveerportfoliowebsiteaks'
  containerRegistry: 'portfolio6523.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
      env:
        DOCKER_BUILDKIT: 1

    - script: |
        docker create --name my_container $(containerRegistry)/$(imageRepository):$(tag)
        docker cp $(Build.SourcesDirectory)/assets/css/style.css my_container:/usr/share/nginx/html/assets/css/
      displayName: 'Copy style.css to Container'

    - task: CopyFiles@2
      displayName: 'Copy files to Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
